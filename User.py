import bcrypt

class User:
    """
    Класс для представления пользователя на платформе.

    Содержит информацию о пользователе, включая его никнейм, хэшированный пароль и возраст.
    Также предоставляет методы для безопасного хэширования паролей.

    Атрибуты:
        nickname (str): Уникальный никнейм пользователя.
        password (bytes): Хэшированный пароль пользователя.
        age (int): Возраст пользователя.
    """

    def __init__(self, nickname, password, age):
        """
        Инициализация объекта пользователя.

        Аргументы:
            nickname (str): Никнейм пользователя.
            password (str): Пароль пользователя, который будет хэширован.
            age (int): Возраст пользователя.
        """
        self.nickname = nickname
        self.password = self.hash_password(password)
        self.age = age

    def hash_password(self, password):
        """
        Хэширует пароль с использованием библиотеки bcrypt.

        Пароль сначала преобразуется в байты, затем хэшируется с добавлением случайной соли.
        Это обеспечивает безопасность хранения паролей.

        Аргументы:
            password (str): Пароль пользователя.

        Возвращает:
            bytes: Хэшированный пароль.
        """
        salt = bcrypt.gensalt()
        hashed_password = bcrypt.hashpw(password.encode(), salt)
        
        return hashed_password

    def __repr__(self):
        """
        Возвращает строковое представление объекта пользователя.

        Используется для отладки и отображения информации о пользователе.

        Возвращает:
            str: Строковое представление пользователя в формате "User('<nickname>')".
        """
        return f"User('{self.nickname}')"
